version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: crm-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: crm_db
      MYSQL_USER: crm_user
      MYSQL_PASSWORD: crm_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
      - crm-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: crm-backend
    environment:
      NODE_ENV: production
      DB_HOST: mysql
      DB_USER: crm_user
      DB_PASSWORD: crm_password
      DB_NAME: crm_db
      DB_PORT: 3306
      PORT: 3000
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: crm_user
      RABBITMQ_PASSWORD: crm_password
      RABBITMQ_VHOST: crm_vhost
    ports:
      - "3000:3000"
    depends_on:
      - mysql
      - rabbitmq
    networks:
      - crm-network
    volumes:
      - ./backend:/app
      - /app/node_modules

  # RabbitMQ Consumer
  consumer:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: crm-consumer
    command: node consumer.js
    environment:
      NODE_ENV: production
      DB_HOST: mysql
      DB_USER: crm_user
      DB_PASSWORD: crm_password
      DB_NAME: crm_db
      DB_PORT: 3306
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: crm_user
      RABBITMQ_PASSWORD: crm_password
      RABBITMQ_VHOST: crm_vhost
    depends_on:
      - mysql
      - rabbitmq
    networks:
      - crm-network
    volumes:
      - ./backend:/app
      - /app/node_modules
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: crm-frontend
    ports:
      - "4200:4200"
    depends_on:
      - backend
    networks:
      - crm-network
    volumes:
      - ./frontend:/app
      - /app/node_modules

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management
    container_name: crm-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: crm_user
      RABBITMQ_DEFAULT_PASS: crm_password
      RABBITMQ_DEFAULT_VHOST: crm_vhost
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - crm-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  mysql_data:
  rabbitmq_data:

networks:
  crm-network:
    driver: bridge